{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red55\green55\blue55;
}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c27843\c27843\c27843;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 View(loans)\
summary(loans)\
str(loans)\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 table(loans$not.fully.paid)\
proportion of loans not paid is 1533/(1533+8045)=0.1601\
\
#Identify variables that have missing values:\
summary(loans)\
\
missing = subset(loans, is.na(log.annual.inc) | is.na(days.with.cr.line) | is.na(revol.util) | is.na(inq.last.6mths) | is.na(delinq.2yrs) | is.na(pub.rec))\
\
nrow(missing)\
#62 of 9578 loans have missing data\
\pard\pardeftab720\partightenfactor0
\cf4 \strokec4 #Prepare the Dataset, impute missing data. \cf2 \strokec2 Imputation predicts #missing variable values for a given observation using the #variable values that are reported.\'a0\cf4 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 library(mice)set.seed(144)\
vars.for.imputation = setdiff(names(loans), "not.fully.paid")\
imputed = complete(mice(loans[vars.for.imputation]))\
loans[vars.for.imputation] = imputed\
#Split data in to training and test sets\
\pard\pardeftab720\partightenfactor0
\cf2 library(caTools)\
set.seed(144)\
spl = sample.split(loans$not.fully.paid, 0.7)\
train = subset(loans, spl == TRUE)\
test = subset(loans, spl == FALSE)\
The model can be trained and summarized with the following commands:\
mod = glm(not.fully.paid~., data=train, family="binomial")\
summary(mod)\
\pard\pardeftab720\partightenfactor0
\cf2 \
#\cf4 \strokec4 Prediction Models, \cf2 \strokec2 predict the probability of the test set loans #not being paid back in full. For confusion matrix use a threshold #of 0.5.\cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 test$predicted.risk = predict(mod, newdata=test, type="response")\
table(test$not.fully.paid, test$predicted.risk > 0.5)\
2403 predictions are correct (accuracy 2403/2873=0.8364). \
2413 predictions are correct in the baseline model of guessing every loan would be paid back in full (accuracy 2413/2873=0.8399).\
\pard\pardeftab720\partightenfactor0
\cf2 \
#Compute test set AUC\
\pard\pardeftab720\partightenfactor0
\cf2 library(ROCR)\
pred = prediction(test$predicted.risk, test$not.fully.paid)\
as.numeric(performance(pred, "auc")@y.values)\
\pard\pardeftab720\partightenfactor0
\cf2 \
#Train the bivariate model\
\pard\pardeftab720\partightenfactor0
\cf2 bivariate = glm(not.fully.paid~int.rate, data=train, family="binomial")\
summary(bivariate)\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 #Summarize the test set predictions:\
pred.bivariate = predict(bivariate, newdata=test, type="response")\
summary(pred.bivariate)\
\pard\pardeftab720\partightenfactor0
\cf2 \
#Updated AUC\
\pard\pardeftab720\partightenfactor0
\cf2 prediction.bivariate = prediction(pred.bivariate, test$not.fully.paid)\
as.numeric(performance(prediction.bivariate, "auc")@y.values)\
\
\pard\pardeftab720\partightenfactor0
\cf4 \strokec4 Investment Strategy\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 test$profit = exp(test$int.rate*3) - 1\
test$profit[test$not.fully.paid == 1] = -1\
\pard\pardeftab720\partightenfactor0
\cf2 summary(test$profit)\
\
\pard\pardeftab720\partightenfactor0
\cf2 highInterest = subset(test, int.rate >= 0.15)\
summary(highInterest$profit)\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 Get the breakdown of whether the loans were paid back in full:\
table(highInterest$not.fully.paid)\
\pard\pardeftab720\partightenfactor0
\cf2 \
\'a0#Find the highest predicted risk\
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]\
selectedLoans = subset(highInterest, predicted.risk <= cutoff)\
nrow(selectedLoans)\
#Sum profit from all loans\
sum(selectedLoans$profit)\
\pard\pardeftab720\partightenfactor0
\cf2 \
#Breakdown of whether each of the selected loans was fully paid \
table(selectedLoans$not.fully.paid)\
\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf4 \strokec4 \
}